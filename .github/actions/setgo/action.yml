name: 'Set Go'
description: like actions/setup-go but worse
inputs:
  go-version:
    required: true
    description: |
      The version of go to install. It can be an exact version or a semver constraint like '1.14' or '^1.14.4'
  install-dir:
    required: false
    description: |
      Where to install go. Default: <tool_cache>/go/<go-version>/x64
outputs:
  GOCACHE:
    description: go env GOCACHE
    value: ${{ steps.install-go.outputs.GOCACHE }}
  GOMODCACHE:
    description: go env GOMODCACHE
    value: ${{ steps.install-go.outputs.GOMODCACHE }}
  GOPATH:
    description: go env GOPATH
    value: ${{ steps.install-go.outputs.GOPATH }}
  GOROOT:
    description: go env GOROOT
    value: ${{ steps.install-go.outputs.GOROOT }}
  GOTOOLDIR:
    description: go env GOTOOLDIR
    value: ${{ steps.install-go.outputs.GOTOOLDIR }}
runs:
  using: composite
  steps:
    - id: resolve-go-version
      shell: bash
      run: |
        constraint='${{ inputs.go-version }}'
        if [ '${{ inputs.go-version }}' = "tip" ] || [ '${{ inputs.go-version }}' = "gotip" ]; then
          constraint='*'
          echo "INSTALL_GO_TIP=1 >> "$GITHUB_ENV"
        fi
        got="$(src/resolve-go-version '${{ inputs.go-version }}' '${{ runner.tool_cache }}/go')"
        if [ -z "$got" ]; then
          echo "::error ::No go version found matching '${{ inputs.go-version }}'"
          exit 1
        fi
        echo "INSTALL_GO_VERSION=$got" >> "$GITHUB_ENV"
    - id: install-go
      shell: bash
      env:
        INSTALL_GO_TOOL_CACHE: ${{ runner.tool_cache }}
        INSTALL_GO_TARGET_DIR: ${{ inputs.install-dir }}
      run: src/install-go
