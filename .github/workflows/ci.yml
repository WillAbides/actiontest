name: ci
on: [ push, pull_request, workflow_dispatch ]
jobs:
#  old:
#    strategy:
#      fail-fast: false
#      matrix:
#        os: [ ubuntu-20.04, macos-latest, windows-2019 ]
#    runs-on: ${{ matrix.os }}
#    steps:
#      - uses: actions/setup-go@v2
#        with:
#          go-version: '1.15.2'
#      - name: go version
#        shell: bash
#        run: |
#          set -x
#          go version
#          go env
#          which go
#          echo $PATH
#          which go
  set-go:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04, macos-latest, windows-2019 ]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    steps:
      - run: env
      - run: cat "go env GOENV"
      - name: set INSTALL_GO_TMP_BASE
        if: ${{ runner.os == 'Windows' }}
        run: |
          echo "INSTALL_GO_TMP_BASE=$HOME/installgotmp" >> "$GITHUB_ENV"
      - uses: actions/checkout@v2
      - name: setup go
        shell: bash
        id: setup-go
        env:
          INSTALL_GO_VERSION: 1.15.2
          INSTALL_GO_TARGET_DIR: ${{ runner.tool_cache }}/go1.15.2/x64
        run: src/install-go
      - name: echo outputs
        run: |
          echo 'GOCACHE=${{steps.setup-go.outputs.GOCACHE}}'
          echo 'GOMODCACHE=${{steps.setup-go.outputs.GOMODCACHE}}'
          echo 'GOPATH=${{steps.setup-go.outputs.GOPATH}}'
          echo 'GOROOT=${{steps.setup-go.outputs.GOROOT}}'
          echo 'GOTOOLDIR=${{steps.setup-go.outputs.GOTOOLDIR}}'
          echo 'GOMOD=${{steps.setup-go.outputs.GOMOD}}'

#          go$goversion download
#  new:
#    runs-on: ubuntu-20.04
#    steps:
#      - name: setup go
#        run: |
#          echo "PATH=$GOROOT_1_15_X64/bin:$PATH" >> $GITHUB_ENV
#          echo "GOROOT=$GOROOT_1_15_X64" >> $GITHUB_ENV
#      - name: go verion
#        run: |
#          go version
#          go env
