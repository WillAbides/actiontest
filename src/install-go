#!/bin/bash

set -ex

# required global vars:
# INSTALL_GO_VERSION=1.2.3  # the version of go to install
# $ACTION_PATH              # where's the action? set it to ${{ runner.action }}
#
# optional vars:
# INSTALL_GO_TARGET_DIR="~/sdk/go$INSTALL_GO_VERSION"  # where to install
# INSTALL_GO_FORCE                                     # set to non-empty to force the install
# INSTALL_GO_OS                                        # set to darwin,windows or linux to override the system os

ACTION_PATH="${ACTION_PATH:-"$(dirname -- "$(dirname -- "$0")")"}"

if [ -z "$INSTALL_GO_VERSION" ]; then
  echo "INSTALL_GO_VERSION is required"
  exit 1
fi

export GOROOT=""
export GO111MODULE=off

homedir() {
  if [ "$(uname -s)" = "Windows" ]; then
    echo "$USERPROFILE"
  else
    echo "$HOME"
  fi
}

sdk_dir() {
  echo "$(homedir)/sdk"
}

goos() {
  if [ -n "$INSTALL_GO_OS" ]; then
    echo "$INSTALL_GO_OS"
    return
  fi
  echo "$(uname -s)" | tr '[:upper:]' '[:lower:]'
}

version_archive_name() {
  local version="$1"
  local goos="$2"
  ext=".tar.gz"
  [ "$goos" == "windows" ] && ext=".zip"
  echo "$version.$goos-amd64$ext"
}

target_dir="$INSTALL_GO_TARGET_DIR"
[ -n "$target_dir" ] || target_dir="$(sdk_dir)/go$INSTALL_GO_VERSION"

if [ -d "$target_dir" ]; then
  echo "$target_dir" already exists
  if [ -z "$INSTALL_GO_FORCE" ]; then
    exit 0
  fi
  rm -rf "$target_dir"
fi
mkdir -p "$(dirname "$target_dir")"
tmpdir="${RUNNER_TEMP:-"$TMPDIR"}/install-go"
rm -rf "$tmpdir"
mkdir -p "$tmpdir"

trap 'rm -rf "$tmpdir"' EXIT

cd "$tmpdir"

archive_name="$(version_archive_name go"$INSTALL_GO_VERSION" "$(goos)")"

[ -f "$archive_name" ] || curl -s --fail -o "$archive_name" "https://storage.googleapis.com/golang/$archive_name"

tarcmd="tar"
[ "$(uname -s)" = "Windows" ] && tarcmd="tar.exe"

$tarcmd -xzf "$archive_name"
ls -haltr .
mv "go" "$target_dir"

echo "::set-output name=go_install_dir::$target_dir"
GITHUB_ENV="${GITHUB_ENV:-/dev/null}"
GITHUB_PATH="${GITHUB_PATH:-/dev/null}"

"$target_dir/bin/go" version
"$target_dir/bin/go" env
"$target_dir/bin/go" get github.com/google/go-github/v28/github
"$target_dir/bin/go" get github.com/WillAbides/semver-next
du -h "$("$target_dir/bin/go" env GOPATH)"
